#+TITLE: Learning by Accumulation

* Learning By Accumulation
   :PROPERTIES:
   :CUSTOM_ID: learning-by-accumulation
   :END:

This is a sort of meta-skill I developed during my college years that
has served me extremely well up to now. Before I started learning to do
this, I would think of project ideas and more or less immediately
discard them, since I didn't yet have the relevant skillset to
accomplish it and felt that acquiring that skillset would be too much of
an investment. Something like "make a machine learning classifier for
seeding tournament brackets" felt impossible to me, since I was under
the erroneous assumption that I would need to learn mountains of machine
learning to "become worthy" of doing a project on machine learning. In
short, I felt that I didn't deserve to use tools that I had not yet
mastered completely.

Luckily, I realized, that's not really the case! Becoming functional and
mediocre at pretty much anything is within reach for pretty much anyone,
and if you're doing it for the sake of a project and not a career then
it's often practical to only acquire what you need to accomplish your
goal. This can often lead you to a more passionate interest in your
subject that you otherwise would have had (i.e. making something cool to
gauge your interest in a subject, then deciding that it was extremely
cool and learning more about it).

The nice thing about this is that your skillset and knowledge don't go
away after you finish your project. By doing many things, you learn to
do many things, and thereby gain access to even more things you wouldn't
have even thought of had you not done the first thing. As they say, once
you're given a hammer, nails start popping up all over the place.

It seems like a pretty obvious thing to say, but you won't believe how
often I see people place this sort of self-imposed barrier to action
upon themselves. People who show up to SSBM tournaments after spending a
year practicing by themselves, since they didn't feel "good enough to
play with real players", or people who refuse to do anything vaguely
math-related since they're afraid of numbers.

Also important to note is that learning in this way will often put you
face-to-face with failure. It's important to realize that this is okay!
Having consistent output is more important than making sure all your
output is good, since you have no obligation to share every single
failure you have. Trying something too hard and messing up still nets
you experience points in the real world, and as Neal Stephenson put it:
"hey, at least a wild-goose chase gives you some exercise."
